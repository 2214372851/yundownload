name: Python package

on:
#  push:
#    branches:
#      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    environment:
      name: PYPI
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python -m pip install poetry

      - name: Bump version
        run: |
          # 读取当前版本号
          CURRENT_VERSION=$(poetry version --short)
          # 将新版本号保存为环境变量，用于后续操作
          echo "CURRENT_VERSION=$NEW_VERSION" >> $GITHUB_ENV



      - name: Install dependencies
        run: |
          poetry install

      - name: Build Package
        run: |
          poetry build

      - name: List dist directory
        run: |
          ls -la ./dist

      - name: Create GitHub Release
        if: github.event_name != 'pull_request'
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: set pypi api token
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: print pypi api token
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "PYPI_API_TOKEN=${{ secrets.PYPI_API_TOKEN }}"

#      - name: Publish to PyPI
#        run: |
#          poetry publish

      - name: Upload Release Asset
        if: github.event_name != 'pull_request'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/naive-${{ env.NEW_VERSION }}-py3-none-any.whl
          asset_name: naive-${{ env.NEW_VERSION }}-py3-none-any.whl
          asset_content_type: application/zip